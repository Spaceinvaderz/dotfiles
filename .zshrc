# Path to your oh-my-zsh configuration.
ZSH=$HOME/.oh-my-zsh
export DEV_ID=$(sed -n -e 1p ~/git/devops/credentials/aws)
export DEV_SECRET=$(sed -n -e 2p ~/git/devops/credentials/aws)
# Set name of the theme to load.
# Look in ~/.oh-my-zsh/themes/
# Optionally, if you set this to "random", it'll load a random theme each
# time that oh-my-zsh is loaded.
# ZSH_THEME="robbyrussell"
ZSH_THEME="kolo"
# ZSH_THEME="sorin"
ZSH_THEME="gozilla"
ZSH_THEME="dieter"
ZSH_THEME="kolo"
ZSH_THEME="arrow"
ZSH_THEME="wezm"

# Example aliases
# alias zshconfig="mate ~/.zshrc"
# alias ohmyzsh="mate ~/.oh-my-zsh"
alias - -='cd -'
unsetopt NOMATCH
zstyle ":completion:*:commands" rehash 1

# Colors
#eval `gdircolors dev/opensource/dircolors-solarized/dircolors.ansi-dark`

# Set to this to use case-sensitive completion
# CASE_SENSITIVE="true"

# Comment this out to disable bi-weekly auto-update checks
# DISABLE_AUTO_UPDATE="true"

# Uncomment to change how often before auto-updates occur? (in days)
# export UPDATE_ZSH_DAYS=13

# Uncomment following line if you want to disable colors in ls
# DISABLE_LS_COLORS="true"

# Uncomment following line if you want to disable autosetting terminal title.
# DISABLE_AUTO_TITLE="true"

# Uncomment following line if you want to disable command autocorrection
DISABLE_CORRECTION="true"

# Uncomment following line if you want red dots to be displayed while waiting for completion
COMPLETION_WAITING_DOTS="true"

# Uncomment following line if you want to disable marking untracked files under
# VCS as dirty. This makes repository status check for large repositories much,
# much faster.
DISABLE_UNTRACKED_FILES_DIRTY="true"

# Which plugins would you like to load? (plugins can be found in ~/.oh-my-zsh/plugins/*)
# Custom plugins may be added to ~/.oh-my-zsh/custom/plugins/
# Example format: plugins=(rails git textmate ruby lighthouse)
plugins=(
  almostontop
  autojump
  battery
  berkshelf-zsh-plugin
  brew
  bundle
  colorize
  command-not-found
  dircycle
  dirhistory
  docker
  docker-machine
  emoji
  emoji-clock
  extract
  fzf
  gem
  git
  git-extras
  golang
  jsontools
  kitchen
  knife
  lol
  npm
  osx
  sprunge
  sublime
  terraform
  thefuck
  themes
  tmux
  vagrant
  zsh-syntax-highlighting
  zsh-navigation-tools
  jira
)

ZSH_HIGHLIGHT_HIGHLIGHTERS=(main brackets pattern cursor)

# ZSH_HIGHLIGHT_STYLES[cursor]='bg=blue'

source ~/.bash_aliases
source $ZSH/oh-my-zsh.sh
source "$(butler --init-completion)"

# Better history search
autoload -U up-line-or-beginning-search
autoload -U down-line-or-beginning-search
zle -N up-line-or-beginning-search
zle -N down-line-or-beginning-search
bindkey "^[[A" up-line-or-beginning-search # Up
bindkey "^[[B" down-line-or-beginning-search # Down]]

COMPLETION_WAITING_DOTS="true"
export HISTIGNORE="ls:cd:cd -:pwd:exit:date:* --help";

fancy-ctrl-z () {
  if [[ $#BUFFER -eq 0 ]]; then
    BUFFER="fg"
    zle accept-line
  else
    zle push-input
    zle clear-screen
  fi
}
zle -N fancy-ctrl-z
bindkey '^Z' fancy-ctrl-z

# Setup zsh-autosuggestions
# source ~/.zsh-autosuggestions/autosuggestions.zsh
# Enable autosuggestions automatically
# zle-line-init() {
#     zle autosuggest-start
# }
# zle -N zle-line-init
# use ctrl+t to toggle autosuggestions(hopefully this wont be needed as
# zsh-autosuggestions is designed to be unobtrusive)
# bindkey '^T' autosuggest-toggle

# Customize to your needs...
export PATH=/usr/local/sbin:/usr/local/bin:$PATH:/usr/bin:/bin:/usr/sbin:/sbin:/opt/X11/bin:/Users/valiev/.rvm/bin
export PATH=/usr/local/Cellar/ruby/2.3.0/bin:$PATH
export PATH=$HOME/.cabal/bin:$PATH
export PATH="/usr/local/opt/python/libexec/bin:$PATH"
#export PYTHONPATH="/usr/local/lib/python2.7/site-packages/"
#export DYLD_INSERT_LIBRARIES="/Users/valiev/dev/opensource/stderred/build/libstderred.dylib${DYLD_INSERT_LIBRARIES:+:$DYLD_INSERT_LIBRARIES}"

export LANGUAGE="ru_RU.UTF-RU"
export LC_ALL=
export LC_CTYPE="ru_RU.UTF-8"
export LANG="en_US.UTF-8"
#export KITCHEN_LOCAL_YAML=".kitchen.yml"
#export KITCHEN_GLOBAL_YAML=".kitchen.local.yml"
### azure completion - begin. generated by omelette ###
if type compdef &>/dev/null; then
  _azure_complette() {
    compadd -- `azure --compzsh --compgen "${CURRENT}" "${words[CURRENT-1]}" "${BUFFER}"`
  }
  compdef _azure_complette azure
elif type complete &>/dev/null; then
  _azure_complette() {
    COMPREPLY=( $(compgen -W '$(azure --compbash --compgen "${COMP_CWORD}" "${COMP_WORDS[COMP_CWORD-1]}" "${COMP_LINE}")' -- "${COMP_WORDS[COMP_CWORD]}") )
  }
  complete -F _azure_complette azure
fi
### azure completion - end ###

### ZPM Z packet manager
if [[ -f ~/.zpm/zpm.zsh ]]; then
    source ~/.zpm/zpm.zsh
else
    git clone --recursive https://github.com/horosgrisa/zpm ~/.zpm
    source ~/.zpm/zpm.zsh
fi
### ZPM plugins
Plug wakeful/zsh-packer
# Plug supercrabtree/k
Plug b4b4r07/emoji-cli
Plug sparsick/asciidoctor-zsh
Plug caarlos0/zsh-pg
Plug s7anley/zsh-geeknote
Plug unixorn/tumult.plugin.zsh
Plug Valiev/almostontop

[ -f ~/.fzf.zsh ] && source ~/.fzf.zsh

export GOPATH="/Users/aseledets/go"
export PATH="$PATH:$GOPATH/bin"
source <(awless completion zsh)

export PATH="/usr/local/opt/openssl@1.1/bin:$PATH"

export LDFLAGS="-L/usr/local/opt/openssl@1.1/lib"
export CPPFLAGS="-I/usr/local/opt/openssl@1.1/include"
export PKG_CONFIG_PATH="/usr/local/opt/openssl@1.1/lib/pkgconfig"

# Add RVM to PATH for scripting. Make sure this is the last PATH variable change.

# Add RVM to PATH for scripting. Make sure this is the last PATH variable change.
export PATH="$PATH:$HOME/.rvm/bin"
export PATH="/usr/local/opt/openssl/bin:$PATH"
#source /usr/local/etc/bash_completion.d/password-store
